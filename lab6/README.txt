1. Функція task1

    Призначення: Обчислює суму чисел у списку.
    Вхідні дані:
        numbers (тип list): Список цілих чисел або дійсних чисел.
    Вихідні дані:
        Сума чисел (тип int або float).

Детальний опис:
Функція task1 використовує вбудовану функцію Python sum() для обчислення суми всіх чисел у вхідному списку numbers.

Приклад використання:

result = task1([1, 2, 3, 4, 5])
print(result)  # Виведе: 15

2. Функція task2

    Призначення: Повертає довжину кортежу.
    Вхідні дані:
        tuple_var (тип tuple): Кортеж, довжину якого потрібно визначити.
    Вихідні дані:
        Довжина кортежу (тип int).

Детальний опис:
Функція task2 використовує вбудовану функцію Python len() для обчислення і повернення кількості елементів у кортежі tuple_var.

Приклад використання:

result = task2((1, 2, 3, 4))
print(result)  # Виведе: 4

3. Функція task3
    Призначення: Знаходить максимальне число у кортежі чисел.
    Вхідні дані:
        numbers_tuple (тип tuple): Кортеж, що містить цілі або дійсні числа.
    Вихідні дані:
        Максимальне число у кортежі (тип int або float).

Детальний опис:
Функція task3 сортує кортеж numbers_tuple за спаданням за допомогою вбудованої функції sorted() з параметром reverse=True. Потім вона повертає перший елемент відсортованого кортежу, який є найбільшим числом.

Приклад використання:

result = task3((10, 5, 20, 15))
print(result)  # Виведе: 20

4. Функція task4

    Призначення: Повертає значення, що відповідає ключу "name" з першого словника у кортежі.
    Вхідні дані:
        dict_tuple (тип tuple): Кортеж, що містить словники.
    Вихідні дані:
        Значення, що відповідає ключу "name" з першого словника (тип str або відповідний тип).

Детальний опис:
Функція task4 отримує доступ до першого словника (dict_tuple[0]) і повертає значення, яке відповідає ключу "name".

Приклад використання:

result = task4(({"name": "Аліса", "вік": 30}, {"name": "Боб", "вік": 25}))
print(result)  # Виведе: "Аліса"

5. Функція task5

    Призначення: Знаходить останній елемент найдовшого кортежу у списку кортежів.
    Вхідні дані:
        list_of_tuples (тип list): Список кортежів.
    Вихідні дані:
        Останній елемент найдовшого кортежу у списку (тип залежить від структури кортежу).

Детальний опис:
Функція task5 сортує list_of_tuples за довжиною першого елементу (len(x[0])) у кожному кортежі за допомогою sorted() з власною функцією key. Потім вона повертає останній елемент найдовшого кортежу, який знаходиться за індексом -1 у відсортованому списку sorted_tuples.

Приклад використання:

result = task5([(('а', 'б', 'в'), 1), (('х', 'у'), 2, 3), (('п', 'р', 'с', 'т'), 4)])
print(result)  # Виведе: 4

6. Функція task6

    Призначення: Обчислює добуток усіх непарних чисел у всіх підсписках кортежу списків.
    Вхідні дані:
        tuple_of_lists (тип tuple): Кортеж, що містить списки цілих чисел.
    Вихідні дані:
        Добуток усіх непарних чисел у підсписках (тип int).

Детальний опис:
Функція task6 проходиться по кожному підсписку (sublist) у кортежі tuple_of_lists. Для кожного числа (num) у sublist вона перевіряє, чи воно непарне (num % 2 != 0), і якщо так, множить його на product. На кінці повертається значення product.

Приклад використання:

result = task6(([1, 2, 3], [4, 5, 6], [7, 8, 9]))
print(result)  # Виведе: 945 (так як 1 * 3 * 5 * 7 * 9 = 945)

7. Функція task7

    Призначення: Обчислює суму других елементів усіх кортежів другий елемент яких є числом.
    Вхідні дані:
        tuple_of_tuples (тип tuple): Кортеж, що містить кортежі з двома елементами.
    Вихідні дані:
        Сума других елементів усіх кортежів (тип int).

Детальний опис:
Функція task7 використовує генератор списку, щоб отримати другий елемент з кожного кортежу (second) у tuple_of_tuples, а потім використовує функцію sum() для обчислення загальної суми цих других елементів.

Приклад використання:

result = task7((('a', 10), ('b', 20), ('c', 30)))
print(result)  # Виведе: 60 (так як 10 + 20 + 30 = 60)